version: '3.8'

services:
  # Base de Datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: nordia-db
    environment:
      - POSTGRES_DB=nordia_pos
      - POSTGRES_USER=nordia
      - POSTGRES_PASSWORD=nordiapass2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - nordia-network
    restart: unless-stopped

  # Redis para cach√© y colas
  redis:
    image: redis:7-alpine
    container_name: nordia-redis
    ports:
      - "6379:6379"
    networks:
      - nordia-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nordia-backend
    environment:
      - DATABASE_URL=postgresql://nordia:nordiapass2025@db:5432/nordia_pos
      - REDIS_URL=redis://redis:6379
      - MERCADOPAGO_ACCESS_TOKEN=${MERCADOPAGO_ACCESS_TOKEN}
      - MERCADOPAGO_PUBLIC_KEY=${MERCADOPAGO_PUBLIC_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ENVIRONMENT=production
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - nordia-network
    restart: unless-stopped
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nordia-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - nordia-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nordia-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - nordia-network
    restart: unless-stopped

networks:
  nordia-network:
    driver: bridge

volumes:
  postgres_data: